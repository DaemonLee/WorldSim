Architecture Notes
==================

This document is an informally written set of notes on the architecture of
WorldSim.  Very much a work in progress.


Design Questions
----------------

    Each person is assigned a person id within the region they are born or
    first appear.  Person ids are unique only within their region.  Regions
    each have a unique id, which is unique across all regions.  For people
    who travel/migrate to other regions, it would perhaps make sense to
    assign them a new id in the new region.  This would mean a table to
    track migrations or people with "multiple" ids.  Probably put that table
    in the master database.


Organization
------------

    WorldSim is organized into a set of libraries and various programs that
    use the libraries.  The libraries are modular and contain foundational
    functionality that can be combined in numerous ways to produce programs
    that simulate various types of "worlds".

    In world simulation, nearly anything could affect anything else (e.g.,
    the "butterfly effect"), and many functions have overlapping purposes
    and categorizations.  In WorldSim, modules are basic building blocks
    and each module is intended to be as clearly defined as possible.

    An overarching design goal for WorldSim is that the module defintions
    and rules implementations will allow for "emergent" behavior.  (This
    will be better explained in a future revision.)

    What follows is the current guiding reasons for how the functions are
    divided up into modular components.

    Gender deals with sexuality and affects mating and reproduction in
    all creatures as well as self identity in intelligent beings.  Since
    reproduction implies fertility, the fertility functions could be
    grouped with gender, but for now they are not.  More than likely,
    gender will be split into two types: identification genders and
    biological genders.  And at that point, fertility and biological
    gender may be combined.  Fertility could also be divided up and
    combined with the fertile object (i.e., people, animals, etc.)
    instead of being separate.  In that case, gender might handled the
    same way.

    Calendar and time are actually two different concepts.  Time is a
    measurement while a calendar event is a marker.  This may seem like
    a trivial difference, but consider:

      - A person who is 15 years old is living within their 16th year
        of life.
      - A day in a month starts at 1, but on the beginning day of a
        month, 0 days have passed, not 1.

    In addition, time is generic (although it may be measured in different
    units), but calendars may display and note events quite differently.
    For this reason, time has been placed in its own module along with
    age functionality.  Time/age are considered biological and geological
    types of function.  The calendar is a separate module and is considered
    a cultural type of function.

    People are a central part of WorldSim.  The reasoning and design for
    their functionality is still in flux.

    Resources and economy are still at TBD stage.

    See the _Execution_ Section for information on the WorldSim programs.


Execution
---------

    Although there may be a number of different startup programs (to setup
    configuration, allow for command line vs. graphical vs. browser, allow
    for different platforms, etc.), each will launch/start a master
    controller (mc) process.

    The mc reads in the persistent data it needs from the master database.
    If the master database does not exist, the mc will create one.

    Next, the mc initializes the regional processes, giving them any needed
    information (e.g., the location of their regional database).  The mc
    should guarantee that each region is not managed (i.e., updated) by more
    than one process.

    After startup, the mc manages the "world tick", monitors the regional
    processes, and facilitates inter-regional activities.  The mc also
    handles console requests, creating new regions, and running special
    processes (e.g., history/storyline summaries).

    Currently, only a command line console startup program is being
    developed.


Data Persistence
----------------

    Data is stored using SQLite, using multiple database files.  The master
    controller database stores the various controller information, including
    information about the other databases.

    Currently, there are only 2 types of databases.

      1. master database - a single database, with a predefined name
      2. regional database - each region has their own database

    For the current schema documentation (still being drafted), see
    Schema.txt.

    Journaling and possibly backup functions for the master database may
    be added later.  Archiving functionality will probably be needed, at
    some point, for performance reasons.


Calendar
--------

    Note: this calendar description is currently intertwined with the time
    concept.  This section needs revision.

    Currently, only 1 calendar is supported.  This calendar is based on
    earth's (current) tropical calendar, but simplified.  This tropical
    year, unlike earth's, does not vary.

      1 minute = 60 seconds
      1 hour = 60 minutes
      1 day = 24 hours
      1 tropical year = 365.2422 days

    The calendar year starts on the same day as the northern vernal equinox
    and lasts through the day preceeding the next northern vernal equinox.
    This means that most calendar years are 365 days with an extra day
    every few years.

    The lunar cycle and months have not been determined yet.


People
------

    Some quick notes - to be expanded later.  Currently:

        only human genders (male, female)
        not handling sexuality (hetero, gay, trans, etc.)
        only handling two genetic parents (mother, father)
        not handling adoption, foster, biological vs nurturing parents


Libraries
---------

rng
    This random number generator library contains various convenience
    routines to generate pseudo-random numbers.  See the Readme.txt (in
    the src/rng directory) for more documentation.

wstime
    This library contains routines that handle WorldSim time and its
    measurement (e.g., ages).  See the _Organization_ Section in this
    document for more information.

calendar
    This library contains routines that handle the calendar and all
    calendar math.  See the _Calendar_ Section in this document for
    more information on the calendar itself.

gender
    This library contains routines that handle gender types.  See the
    Readme.txt (in the src/gender directory) for more documentation.

fertility
    This library contains routines that handle fertility, current only
    for humans.

people
    This library contains routines that handle people.  See the _People_
    Section in this document for more information.
